// Generated by Dagger (https://google.github.io/dagger).
package com.selfcompany.faizf.seemovie.presentation.fragment;

import com.selfcompany.faizf.newbase.manager.DialogManager;
import com.selfcompany.faizf.newbase.utils.Util;
import com.selfcompany.faizf.seemovie.presentation.movie.MovieFragment;
import com.selfcompany.faizf.seemovie.presentation.movie.MoviePres;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class MovieFragment_MembersInjector implements MembersInjector<MovieFragment> {
  private final Provider<DialogManager> dialogManagerProvider;

  private final Provider<Util> utilProvider;

  private final Provider<MoviePres> presenterProvider;

  public MovieFragment_MembersInjector(
      Provider<DialogManager> dialogManagerProvider,
      Provider<Util> utilProvider,
      Provider<MoviePres> presenterProvider) {
    this.dialogManagerProvider = dialogManagerProvider;
    this.utilProvider = utilProvider;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<MovieFragment> create(
      Provider<DialogManager> dialogManagerProvider,
      Provider<Util> utilProvider,
      Provider<MoviePres> presenterProvider) {
    return new MovieFragment_MembersInjector(
        dialogManagerProvider, utilProvider, presenterProvider);
  }

  @Override
  public void injectMembers(MovieFragment instance) {
    BaseFragment_MembersInjector.injectDialogManager(instance, dialogManagerProvider.get());
    BaseFragment_MembersInjector.injectUtil(instance, utilProvider.get());
    injectPresenter(instance, presenterProvider.get());
  }

  public static void injectPresenter(MovieFragment instance, MoviePres presenter) {
    instance.presenter = presenter;
  }
}
